<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>
        .btn-buy {
            display: flex;
            margin: 1.5rem auto 0 auto;
            padding: 12px 20px;
            border: none;
            background: #95caff;
            color: #131313;
            font-size: 1rem;
            font-weight: 500;
            transition: .4s ease;
        }
        .cart-stuff {
            display: flex;
        }
        .detail-box {
            margin-left: 15px;
            color: #e8e8e8;
        }
        .classDesc {
            margin-top: -20px;
        }
        .classPrice {
            margin-top: -20px;
        }
        .classProd {
            margin-top: 20px;
        }
        .jsrespo {
            display: flex;
            justify-content: space-between;
        }
        .delete-form {
            justify-content: flex-end;
        }
        .qtyvalue {
            width: 40px;
            height: 20px;
            justify-content: center;
            border: none;
        }
        .button-10 {
            margin-left: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            padding: 6px 14px;
            font-family: -apple-system, BlinkMacSystemFont, 'Roboto', sans-serif;
            border-radius: 6px;
            border: none;
            color: #fff;
            background: linear-gradient(180deg, #4B91F7 0%, #367AF6 100%);
            background-origin: border-box;
            box-shadow: 0px 0.5px 1.5px rgba(54, 122, 246, 0.25), inset 0px 0.8px 0px -0.25px rgba(255, 255, 255, 0.2);
            user-select: none;
            -webkit-user-select: none;
            touch-action: manipulation;
        }
        .button-10:focus {
            box-shadow: inset 0px 0.8px 0px -0.25px rgba(255, 255, 255, 0.2), 0px 0.5px 1.5px rgba(54, 122, 246, 0.25), 0px 0px 0px 3.5px rgba(58, 108, 217, 0.5);
            outline: 0;
        }
        .cart-quantity {
            padding: 10px;
            display: flex;
        }
        .cart-remove {
            background-color: #ffffff00;
            border: none;
            color: #ffffff;
        }
        .notialert {
            justify-content: center;
            margin-top: 20px;
            color: #131924;
        }
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }
        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }
        .alert {
            top: 122px;
            right: 30px;
            text-align: center;
            padding: 15px;
            width: fit-content;
            background-color: #6375ffb5;
            color: white;
            border-radius: 5px;
            z-index: 2;
            padding: 20px;
            position: fixed;
            right: 20px;
            animation: slideIn 0.5s forwards, slideOut 0.5s 4.5s forwards; /* Slide in and out */
        }
        .alert.success {
            background-color: #4CAF50;
        }
        .text-colour {
            color: #93b5ff;
            text-shadow: #131313;
        }
        .valuebox {
            height: 30px;
            width: 50px;
            border: none;
            font-size: 17px;
            padding: 5px;
            border-radius: 5px;
            color: #ffffff;
            background-color: #2b2b2bad;
        }
        .notifications {
            position: fixed;
            top: 100px;
            right: 5px;
            z-index: 101;
        }
        .toast {
            position: relative;
            padding: 10px;
            color: #fff;
            margin-bottom: 10px;
            width: 400px;
            display: grid;
            grid-template-columns: 70px 1fr 70px;
            border-radius: 5px;
            --color: #0abf30;
            background-image: linear-gradient(to right, #0abf3055, #22242f 30%);
            animation: show 0.3s ease 1 forwards;
        }
        .toast i {
            color: var(--color);
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: x-large;
        }
        .toast .title {
            font-size: x-large;
            font-weight: bold;
        }
        .toast span, .toast i:nth-child(3) {
            color: #fff;
            opacity: 0.6;
        }
        @keyframes show {
            0% {
                transform: translateX(100%);
            }
            40% {
                transform: translateX(-5%);
            }
            80% {
                transform: translateX(0%);
            }
            100% {
                transform: translateX(-10%);
            }
        }
        .toast::before {
            position: absolute;
            bottom: 0;
            left: 0;
            background-color: var(--color);
            width: 100%;
            height: 3px;
            content: '';
            box-shadow: 0 0 10px var(--color);
            animation: timeOut 5s linear 1 forwards;
        }
        @keyframes timeOut {
            to {
                width: 0;
            }
        }
        .toast.error {
            --color: #f24d4c;
            background-image: linear-gradient(to right, #f24d4c55, #22242F 30%);
        }
        .toast.warning {
            --color: #e9bd0c;
            background-image: linear-gradient(to right, #e9bd0c55, #22242F 30%);
        }
        .toast.info {
            --color: #3498db;
            background-image: linear-gradient(to right, #3498db55, #22242F 30%);
        }
    </style>
</head>
<body>
    <div id="cart-content">
        <h2 class="text-colour">Your Cart</h2>
        <div class="notifications"></div>
        {{#if successMessage}}
        {{/if}}
        {{#if errorMessage}}
        {{/if}}
        <a href="/dashboard"><i class='bx bx-cart-add' id="close-cart"></i></a>
        {{#if isEmpty}}
            <p class="notialert text-colour">Your cart is empty.</p>
        {{else}}
            <ul id="cart-items">
                {{#each cart.items}}
                    <li class="classProd" data-price="{{this.productId.price}}" data-quantity="{{this.quantity}}">
                        <div class="cart-stuff">
                            <img src="/uploads/{{this.productId.imageurl}}" alt="{{this.productId.title}}" class="cart-img">
                            <div class="detail-box">
                                <h2 class="cart-product-title">{{this.productId.title}}</h2>
                                <p class="classDesc">{{this.productId.description}}</p>
                                <span class="classPrice" data-price="{{this.productId.price}}">$<span class="formatted-price">{{this.productId.price}}</span></span>
                            </div>
                        </div>
                        <div class="jsrespo">
                            <!-- Update Quantity Form -->
                            <form action="/cart/update" method="POST" class="update-form cart-quantity">
                                <input type="hidden" name="productId" value="{{this.productId._id}}" class="qtyvalue">
                                <input type="number" name="quantity" value="{{this.quantity}}" min="1" class="qtyvalue valuebox" onchange="updateTotalPrice()">
                                <button type="submit" class="button-10">Update</button>
                            </form>
                            <!-- Remove Item Form -->
                            <form action="/cart/delete" method="POST" class="delete-form">
                                <input type="hidden" name="productId" value="{{this.productId._id}}">
                                <button type="submit" class="cart-remove"><i class='bx bxs-trash-alt'></i></button>
                            </form>
                        </div>
                    </li>
                {{/each}}
            </ul>
            <!-- Total Price Cart update -->
            {{!-- <div class="total">
                <div class="total-title">Total</div>
                <div id="total-price" class="total-price">$0</div>
            </div> --}}
            <!-- Submit Btn -->
            <form action="/pay" method="POST">
                <button type="submit" class="btn-buy">Checkout</button>
            </form>
        {{/if}}
    </div>


<script>
        document.addEventListener('DOMContentLoaded', function() {
            function formatPrice(price) {
                if (price >= 1000000) {
                    return (price / 1000000).toFixed(1) + 'M';
                }
                return price.toLocaleString();
            }

            function updatePrices() {
                const priceElements = document.querySelectorAll('.classPrice');

                priceElements.forEach(function(priceElement) {
                    const price = parseFloat(priceElement.dataset.price);
                    if (!isNaN(price)) {
                        const formattedPrice = formatPrice(price);
                        priceElement.querySelector('.formatted-price').textContent = formattedPrice;
                    } else {
                        console.error('Invalid price:', priceElement.dataset.price);
                    }
                });
            }

            function updateTotalPrice() {
                const priceElements = document.querySelectorAll('.classProd');
                let totalPrice = 0;

                priceElements.forEach(function(priceElement) {
                    const price = parseFloat(priceElement.dataset.price);
                    const quantity = parseInt(priceElement.dataset.quantity);
                    if (!isNaN(price) && !isNaN(quantity)) {
                        totalPrice += price * quantity;
                    }
                });

                const formattedTotalPrice = formatPrice(totalPrice);
                document.getElementById('total-price').textContent = `$${formattedTotalPrice}`;
            }

            updatePrices();
            updateTotalPrice();
        });
    </script>




    <script>
        function updateTotalPrice() {
    let total = 0;
    const cartItems = document.querySelectorAll('#cart-items .classProd');
    cartItems.forEach(item => {
        const price = parseFloat(item.getAttribute('data-price'));
        const quantity = parseInt(item.querySelector('input[name="quantity"]').value);
        total += price * quantity;
    });
    document.getElementById('total-price').textContent = `$${total.toFixed(2)}`;
}


        document.addEventListener("DOMContentLoaded", function() {
            const notifications = document.querySelector('.notifications');
            const successMessage = "{{successMessage}}";
            const errorMessage = "{{errorMessage}}";

            function createToast(type, icon, title, text) {
                let newToast = document.createElement('div');
                newToast.innerHTML = `
                    <div class="toast ${type}">
                        <i class="${icon}"></i>
                        <div class="content">
                            <div class="title">${title}</div>
                            <span>${text}</span>
                        </div>
                        <i class="fa-solid fa-xmark" onclick="(this.parentElement).remove()"></i>
                    </div>`;
                notifications.appendChild(newToast);
                newToast.timeOut = setTimeout(() => newToast.remove(), 5000);
            }

            if (successMessage) {
                createToast('success', 'fa-solid fa-circle-check', 'Success', successMessage);
            }

            if (errorMessage) {
                createToast('error', 'fa-solid fa-circle-exclamation', 'Message', errorMessage);
            }

            updateTotalPrice(); // Initialize the total price on page load
        });
    </script>
</body>
</html>
