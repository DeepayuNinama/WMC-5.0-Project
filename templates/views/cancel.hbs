<!DOCTYPE html>
<html>
<head>
    <title>Mafia | Payment Cancelled</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css" integrity="sha512-Kc323vGBEqzTmouAECnVceyQqyqdsSiqLQISBL29aUW4U/M7pSPA/gEUZQqv1cwx4OnYxTxve5UMg5GT6L4JJg==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <style>

        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap');

        *{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Poppins', sans-serif;
            cursor: url(../image/cursor.png), auto;
        }
        body {
            background: none;
            overflow: hidden;
        }
        #myVideo {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            z-index: -1;
        }
        .parent{
            display: grid;
            place-items: center;
            height: 100vh;
            padding: 20px;
        }

        .container {
            background: rgba(145, 145, 145, 0.194);
            backdrop-filter: blur(10px);
            padding: 20px;
            border-radius: 5px;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }
        .title {
            font-size: 30px;
            margin-bottom: 20px;
            font-weight: 600;
        }
        .details {
            margin-bottom: 20px;
        }
        .home-link {
            display: inline-block;
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #3665ff;
            color: #ffffff;
            text-decoration: none;
            border-radius: 5px;
        }
        .home-link:hover {
            background-color: #2147c4;
        }
        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOut {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        .alert {
            top: 122px;
            right: 30px;
            text-align: center;
            padding: 15px;
            width: fit-content;
            background-color: #6375ffb5;
            color: white;
            border-radius: 5px;
            z-index: 2;
            padding: 20px;
            position: fixed;
            right: 20px;
            animation: slideIn 0.5s forwards, slideOut 0.5s 4.5s forwards; /* Slide in and out */
        }

        .alert.success {
            background-color: #4CAF50;
        }
    </style>

    <style>
.notifications {
    position: fixed;
    top: 100px;
    right: 5px;
    z-index: 101;
}

.toast {
    position: relative;
    padding: 10px;
    color: #fff;
    margin-bottom: 10px;
    width: 400px;
    display: grid;
    grid-template-columns: 70px 1fr 70px;
    border-radius: 5px;
    --color: #0abf30;
    background-image: linear-gradient(to right, #0abf3055, #22242f 30%);
    animation: show 0.3s ease 1 forwards;
}

.toast i {
    color: var(--color);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: x-large;
}

.toast .title {
    font-size: x-large;
    font-weight: bold;
}

.toast span, .toast i:nth-child(3) {
    color: #fff;
    opacity: 0.6;
}

@keyframes show {
    0% {
        transform: translateX(100%);
    }
    40% {
        transform: translateX(-5%);
    }
    80% {
        transform: translateX(0%);
    }
    100% {
        transform: translateX(-10%);
    }
}

.toast::before {
    position: absolute;
    bottom: 0;
    left: 0;
    background-color: var(--color);
    width: 100%;
    height: 3px;
    content: '';
    box-shadow: 0 0 10px var(--color);
    animation: timeOut 5s linear 1 forwards;
}

@keyframes timeOut {
    to {
        width: 0;
    }
}

.toast.error {
    --color: #f24d4c;
    background-image: linear-gradient(to right, #f24d4c55, #22242F 30%);
}

.toast.warning {
    --color: #e9bd0c;
    background-image: linear-gradient(to right, #e9bd0c55, #22242F 30%);
}

.toast.info {
    --color: #3498db;
    background-image: linear-gradient(to right, #3498db55, #22242F 30%);
}


</style>
</head>
<body>

    <video autoplay muted loop id="myVideo">
        <source src="video/bgvideo.mp4" type="video/mp4">
    </video>

    <div class="notifications"></div>
    {{#if successMessage}}

    {{/if}}

    {{#if errorMessage}}

    {{/if}}

    <div class="parent">
        <div class="container">
            <div class="title">Payment Cancelled</div>
            <div class="details">
                <p>Your payment was cancelled.</p>
            </div>
            <a href="/dashboard" class="home-link">Go to Dashboard</a>
        </div>
    </div>


            <script>
            document.addEventListener("DOMContentLoaded", function() {
                const notifications = document.querySelector('.notifications');
                const successMessage = "{{successMessage}}";    
                const errorMessage = "{{errorMessage}}";

                function createToast(type, icon, title, text) {
                    let newToast = document.createElement('div');
                    newToast.innerHTML = `
                        <div class="toast ${type}">
                            <i class="${icon}"></i>
                            <div class="content">
                                <div class="title">${title}</div>
                                <span>${text}</span>
                            </div>
                            <i class="fa-solid fa-xmark" onclick="(this.parentElement).remove()"></i>
                        </div>`;
                    notifications.appendChild(newToast);
                    newToast.timeOut = setTimeout(() => newToast.remove(), 5000);
                }

                if (successMessage) {
                    createToast('success', 'fa-solid fa-circle-check', 'Success', successMessage);
                }

                if (errorMessage) {
                    createToast('error', 'fa-solid fa-circle-exclamation', 'Message', errorMessage);
                }
            });
        </script>



</body>
</html>
